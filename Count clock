module top_module(
    input clk,
    input reset,
    input ena,
    output pm,
    output [7:0] hh,
    output [7:0] mm,
    output [7:0] ss); 
	wire ena_mm,ena_hh;
    always@(posedge clk)begin
        if(reset)begin
        	ss <= 8'h00;
        end else
            begin
                if(ena)
                    begin
                        if(ss[3:0] == 4'h9)begin
                           ss[3:0] <= 4'h0;
                            if(ss[7:4]==4'h5)
                                ss[7:4] <=4'h0;
                            else
                                ss[7:4] <= ss[7:4]+4'h1;
                        end
                        else begin
                            ss[3:0] <= ss[3:0]+4'h1;
                        end  
                    end
            end                 
    end
    assign ena_mm = (ena & (ss == 8'h59));
    always@(posedge clk)begin
        if(reset)begin
        	mm <= 8'h00;
        end else
            begin
                if(ena_mm)
                    begin
                        if(mm[3:0] == 4'h9)begin
                            mm[3:0] <= 4'h0;
                            if(mm[7:4]==4'h5)
                                mm[7:4]<=4'h0;
                         else
                             mm[7:4] <= mm[7:4]+4'h1;
                        end
                        else begin
                            mm[3:0] <= mm[3:0]+4'h1;
                        end
                    end
            end                 
    end
    assign ena_hh = (ena_mm & (mm == 8'h59));
    always@(posedge clk)begin
        if(reset)begin
        	hh <= 8'h12;
            pm <= 0;
        end else
            begin
                if(ena_hh)
                    begin
                        if(hh == 8'h11)begin
                            pm <= ~pm;
                        end
                        if(hh[7:4] == 4'h1 && hh[3:0] == 4'h2)begin
                            hh <= 8'h01;
                        end
                        else if (hh[3:0] == 4'h9)begin
                            hh[3:0] <= 4'h0;
                            hh[7:4] <= 4'h1;
                        end else hh[3:0] <= hh[3:0]+4'h1;
                    end
            end                 
    end
endmodule

